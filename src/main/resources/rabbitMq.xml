<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/rabbit
     http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">
    <!--配置connection-factory，指定连接rabbit server参数 -->
    <rabbit:connection-factory id="connectionFactory"
                               username="dev" password="dev_user" host="mq201.dev.rs.com" port="5672" channel-cache-size="100"/>

    <bean id="jsonMessageConverter"  class="com.mqDemo.rabbitmq.converter.FastJsonMessageConverter"></bean>

    <!--定义rabbit template用于数据的接收和发送 -->
    <rabbit:template id="rabbitTemplate"  connection-factory="connectionFactory"
                     exchange="exchangeTest" message-converter="jsonMessageConverter"/>

    <!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成 -->
    <rabbit:admin connection-factory="connectionFactory" />

    <!--定义queue -->
    <rabbit:queue id ="com.mqdemo.student" name="com.mqdemo.student" durable="true" auto-delete="false" exclusive="false" />
    <!--定义queue -->
    <rabbit:queue id ="com.mqdemo.student1"  name="com.mqdemo.student1" durable="true" auto-delete="false" exclusive="false" />

    <!-- 定义direct exchange，绑定queueTest -->
    <rabbit:topic-exchange name="exchangeTest" durable="true" auto-delete="false">
        <rabbit:bindings>
            <rabbit:binding queue="com.mqdemo.student" pattern="com.mqdemo.*"></rabbit:binding>
            <rabbit:binding queue="com.mqdemo.student1" pattern="com.mqdemo.*"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:topic-exchange>


    <!-- 消息接收者 -->
    <bean id ="studentHandler" class="com.mqDemo.rabbitmq.demo.handler.StudentHandler"></bean>
    <bean id="studentMqListenter" class="com.mqDemo.rabbitmq.demo.consumer.StudentMqListenter">
       <property name="iHandler" ref="studentHandler"/>
    </bean>
    <!-- 消息接收者 -->
    <bean id="studentMqListenter1" class="com.mqDemo.rabbitmq.demo.consumer.StudentMqListenter1">
        <property name="iHandler" ref="studentHandler"/>
    </bean>

    <!-- queue litener  观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象-->
    <rabbit:listener-container connection-factory="connectionFactory" prefetch="1" acknowledge="manual"  concurrency="10">
        <rabbit:listener queues="com.mqdemo.student" ref="studentMqListenter" />
        <rabbit:listener queues="com.mqdemo.student1" ref="studentMqListenter1"/>
    </rabbit:listener-container>

</beans>